@model Multas_tC.Models.Agentes

@{
   ViewBag.Title = "Agentes";
}

<h2>Editar</h2>


@*
   Quando se deseja efetuar o upload de um ficheiro,
   esta instrução é insuficiente
   @using(Html.BeginForm())
   é necessário adicionar-lhe o parâmetro 'enctype = "multipart/form-data" '
*@
@using(Html.BeginForm("Edit",
                      "Agentes",
                      FormMethod.Post,
                      new { enctype = "multipart/form-data" })) {



   @Html.AntiForgeryToken()

   <div class="form-horizontal">
      <h4>Agentes</h4>
      <hr />
      @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      @Html.HiddenFor(model => model.ID)

      @* esta instrução foi aqui adicionada, pois é necessária para
         garantir que o nome da fotografia
         de um Agente seja devidamente entregue no controller *@
      @Html.HiddenFor(model => model.Fotografia)


      <div class="form-group">
         @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor(model => model.Fotografia, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @* com a adição da opção de efetuar upload de uma imagem, estes objetos não são mais necessários
               @Html.EditorFor(model => model.Fotografia, new { htmlAttributes = new { @class = "form-control" } })
               @Html.ValidationMessageFor(model => model.Fotografia, "", new { @class = "text-danger" })*@

            @* Mostrar a imagem associada ao Agente *@
            <a href="~/imagens/@Model.Fotografia" target="_blank">
               <img src="~/imagens/@Model.Fotografia" height="150" />
            </a>

            @* procurar a nova imagem*@
            <input type="file" name="uploadFoto" style="color:blue;" accept=".jpg" />

         </div>
      </div>

      <div class="form-group">
         @Html.LabelFor(model => model.Esquadra, htmlAttributes: new { @class = "control-label col-md-2" })
         <div class="col-md-10">
            @Html.EditorFor(model => model.Esquadra, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Esquadra, "", new { @class = "text-danger" })
         </div>
      </div>

      <div class="form-group">
         <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-default" />
         </div>
      </div>
   </div>
}

<div>
   @Html.ActionLink("Regressar ao início", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
